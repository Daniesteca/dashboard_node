<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>

    <!-- inicio estructura  para respetar el layout -->
    <div class="content">
        <div class="row">
          <div class="col-md-12">
            <div class="card ">
                <!-- inicio contenido "dentro" del layout -->
              <div class="card-header">
                <h4 class="card-title"> Grafico con chart.js</h4>
              </div>
              <div class="card-body">
                <div class="table-responsive">
                    <h1>chart.js</h1>
                </div>

                <div>
                    <canvas id="myChart"></canvas>
                </div>
              </div>
            </div>
            <!-- fin contenido dentro del layout -->
         </div>
       </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


          <script>
            const ctx = document.getElementById('myChart');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [], // Inicialmente vacío, se llenará con los nombres de los productos
                    datasets: [{
                        label: 'Stock de productos',
                        data: [], // Inicialmente vacío, se llenará con los valores de stock
                        backgroundColor: ['#c7b4fe'],
                        borderColor: ['#925bf7'],
                        borderWidth: 5
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        
            // Llamada fetch para obtener los datos del gráfico
            fetch('/graficOne')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(datos => mostrar(datos)) // 'datos' ahora es un array de objetos
                .catch(error => console.log(error));
        
            // Función para mostrar los datos en el gráfico
            const mostrar = (articulos) => {
                articulos.forEach(element => {
                    myChart.data.labels.push(element.descripcion); // Añadir la descripción como etiqueta
                    myChart.data.datasets[0].data.push(element.stock); // Añadir el stock como dato
                });
                myChart.update(); // Actualiza el gráfico para reflejar los nuevos datos
                console.log(myChart);
            };
        </script>
        
</body>
</html>